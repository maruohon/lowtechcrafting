
buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net' }
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '3.+', changing: true
    }
}

apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'java'

repositories {
    // gigaherz mappings
    maven {
        url 'https://www.dogforce-games.com/maven/'
    }
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

ext.configFile = file "build.properties"

configFile.withReader {
    def prop = new Properties()
    prop.load(it)
    project.ext.config = new ConfigSlurper().parse prop
}

minecraft {
    //mappings channel: 'snapshot', version: '20191019-1.14.3'
    mappings channel: "${config.mappings_channel}", version: "${config.mappings_version}"
    //mappings = config.mappings_version

    //makeObfSourceJar = false

    ext.mod_version = config.mod_version

    if (config.mod_version.endsWith('-dev')) {
        config.mod_version = config.mod_version + "." + new Date().format('yyyyMMdd.HHmmss')
    }

    /*
    replaceIn "reference/Reference.java"
    replace "@MOD_VERSION@", mod_version

    if (project.hasProperty("signJarKeyStore")) {
        replace "@FINGERPRINT@", signJarFingerprint
    }
    */
}

dependencies {
    minecraft 'net.minecraftforge:forge:' + config.minecraft_version + '-' + config.forge_version
}

compileJava {
    sourceCompatibility = 1.8
    targetCompatibility = 1.8
    options.encoding = 'UTF-8'
}

group = config.group + "." + config.mod_id // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = config.mod_file_name + '-' + config.minecraft_version_out
version = project.config.mod_version

/**
 * This section allows you to customise your generated jar (litemod) file. By
 * default it includes the generated litemod.json file, however if you prefer to
 * include your own file from resources, simply remove the line below.
 */
jar {
    // Remove the "-mc1.12" suffix from the file name
    //classifier = ""
    // Don't append a 'mod-' filename prefix >_>
    //baseName = archivesBaseName

    manifest {
        attributes([
            "Specification-Title": "${config.mod_id}",
            "Specification-Vendor": "${config.author}",
            "Specification-Version": "1", // We are version 1 of ourselves
            "Implementation-Title": "${config.mod_name}",
            "Implementation-Version": "${config.mod_version}",
            "Implementation-Vendor": "${config.author}",
            "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

processResources
{
    // Exclude the GIMP image files
    exclude '**/*.xcf'
    exclude '**/xcf'

    // this will ensure that this task is redone when the versions change.
    inputs.property "mod_version", project.config.mod_version
    inputs.property "minecraft_version", project.config.minecraft_version
}

/*
if (project.hasProperty("signJarKeyStore")) {
    task signJar(type: SignJar, dependsOn: reobfJar) {
        inputFile = jar.archivePath
        outputFile = jar.archivePath

        keyStore = signJarKeyStore
        alias = signJarAlias
        storePass = signJarStorePass
        keyPass = signJarKeyPass
    }

    build.dependsOn signJar
}
*/
